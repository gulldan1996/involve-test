{"version":3,"sources":["redux/actions.js","redux/rootReducer.js","redux/createStore.js","Components/SuccessfulPage/SuccessfulPage.js","Components/ConfirmationPage/ConfirmationPage.js","redux/selectors.js","Components/ExchangePage/InputCurrency/InputCurrency.js","Components/ExchangePage/Sell/Sell.js","Components/ExchangePage/Buy/Buy.js","Components/ExchangePage/ButtonExchange/ButtonExchange.js","Components/ExchangePage/ExchangePage.js","Components/Loading/Loading.js","RouterNav.js","App.js","index.js"],"names":["ACTION_TYPE","handlerInput","base","amount","type","fetchCalculationData","invoice","withdraw","dispatch","fetch","then","res","json","data","calculationData","initialState","loading","listMethods","currencyInvoice","currencyWithdraw","sellList","buyList","invoicePayMethod","withdrawPayMethod","inputInvoice","inputWithdraw","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","state","action","list","id","bool","applyMiddleware","SuccessfulPage","ConfirmationPage","getListInvoice","getListWithdraw","getInvoice","getWithdraw","getSellList","getBuyList","getInputInvoice","getInputWithdraw","getCalculationData","InputCurrency","value","placeholder","className","onChange","val","target","connect","listInvoice","getCurrencyInvoice","handleSellList","useEffect","onOutsideClick","onClick","name","map","item","key","listWithdraw","getCurrencyWithdraw","handleBuyList","ButtonExchange","b","a","i","w","Loading","loadingListMethods","req","path","exact","to","App","ReactDOM","render","document","getElementById"],"mappings":"8ZAAaA,EACW,uBADXA,EAEW,uBAFXA,EAGO,mBAHPA,EAIM,kBAJNA,EAKY,wBALZA,EAMO,mBANPA,EAOI,gBA4BJC,EAAe,SAACC,EAAMC,GAAP,MAAmB,CAC7CC,KAAMJ,EACNE,OACAC,WASWE,EAAuB,SAACH,EAAMC,EAAQG,EAASC,GAAxB,OAAqC,SAAAC,GACpEN,GAAQC,GAAUG,GAAWC,GAC9BE,MAAM,mEAAD,OACgEP,EADhE,mBAC+EC,EAD/E,6BAC0GG,EAD1G,8BACuIC,IAEzIG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUL,EAZE,SAAAK,GACtB,MAAQ,CACRT,KAAMJ,EACNa,QAS6BC,CAAgBD,SCnDzCE,EAAe,CACnBC,SAAS,EACTC,YAAa,KACbC,gBAAiB,KACjBC,iBAAkB,KAClBC,UAAU,EACVC,SAAS,EACTP,gBAAiB,CACfZ,KAAM,GACNC,OAAQ,EACRmB,iBAAkB,EAClBC,kBAAmB,GAErBC,aAAc,GACdC,cAAe,ICZjB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAc,CAACC,KAERC,EAAQC,aDYd,WAAoD,IAA/BC,EAA8B,uDAAtBnB,EAAcoB,EAAQ,uCACxD,OAAQA,EAAO/B,MACb,KAAKJ,EAAmC,IAC9BoC,EAASD,EAATC,KACR,OAAO,2BACFF,GADL,IAEEjB,YAAamB,EACbpB,SAAS,IAGb,KAAKhB,EAAmC,IAC9BM,EAAY6B,EAAZ7B,QACR,OAAO,2BACF4B,GADL,IAEEhB,gBAAiBZ,EACjBQ,gBAAgB,2BACXoB,EAAMpB,iBADI,IAEbQ,iBAAkBhB,EAAQ+B,KAE5BjB,UAAU,IAGd,KAAKpB,EAAoC,IAC/BO,EAAa4B,EAAb5B,SACR,OAAO,2BACF2B,GADL,IAEEf,iBAAkBZ,EAClBO,gBAAgB,2BACXoB,EAAMpB,iBADI,IAEbS,kBAAmBhB,EAAS8B,KAE9BhB,SAAS,IAGb,KAAKrB,EAA8B,IACzBsC,EAASH,EAATG,KACR,OAAO,2BACFJ,GADL,IAEEb,QAASiB,IAGb,KAAKtC,EAA4B,IACvBE,EAAiBiC,EAAjBjC,KAAMC,EAAWgC,EAAXhC,OACd,MAAa,YAATD,EACK,2BACFgC,GADL,IAEEV,aAAcrB,EACdW,gBAAgB,2BACXoB,EAAMpB,iBADI,IAEbZ,KAAMA,EACNC,OAAQA,MAID,aAATD,EACK,2BACFgC,GADL,IAEET,cAAetB,EACfW,gBAAgB,2BACXoB,EAAMpB,iBADI,IAEbZ,KAAMA,EACNC,OAAQA,MAIP,eACF+B,GAGP,KAAKlC,EAA+B,IAC1BsC,EAASH,EAATG,KACR,OAAO,2BACFJ,GADL,IAEEd,SAAUkB,IAGd,KAAKtC,EAA+B,IAC1Ba,EAASsB,EAATtB,KACR,MAAmC,aAA/BqB,EAAMpB,gBAAgBZ,KACjB,2BACFgC,GADL,IAEEV,aAAcX,EAAKV,SAGd,2BACF+B,GADL,IAEET,cAAeZ,EAAKV,SAI1B,QACE,OAAO+B,KCrGXR,EAAiBa,IAAe,WAAf,EAAmBT,K,OCEvBU,G,MARQ,WACrB,OACE,gCCMWC,G,MARU,WACvB,OACE,gCCHSzB,G,YAAU,SAAAkB,GAAK,OAAIA,EAAMlB,UACzB0B,EAAiB,SAAAR,GAAK,OAAIA,EAAMjB,YAAYX,SAC5CqC,EAAkB,SAAAT,GAAK,OAAIA,EAAMjB,YAAYV,UAC7CqC,EAAa,SAAAV,GAAK,OAAIA,EAAMhB,iBAC5B2B,EAAc,SAAAX,GAAK,OAAIA,EAAMf,kBAC7B2B,EAAc,SAAAZ,GAAK,OAAIA,EAAMd,UAC7B2B,EAAa,SAAAb,GAAK,OAAIA,EAAMb,SAC5B2B,EAAkB,SAAAd,GAAK,OAAIA,EAAMV,cACjCyB,EAAmB,SAAAf,GAAK,OAAIA,EAAMT,eAClCyB,EAAqB,SAAAhB,GAAK,OAAIA,EAAMpB,iBCIlCqC,G,MAZO,SAAC,GAAgD,IAA9CjD,EAA6C,EAA7CA,KAAMkD,EAAuC,EAAvCA,MAAOnD,EAAgC,EAAhCA,aAAcoD,EAAkB,EAAlBA,YAClD,OACE,2BACEC,UAAU,QACVlD,KAAK,SACLgD,MAAOA,EACPG,SAAU,SAACC,GAAD,OAASvD,EAAaC,EAAMsD,EAAIC,OAAOL,QACjDC,YAAaA,M,iBCyEJK,eAdS,SAACxB,GAAD,MAAY,CAClCyB,YAAajB,EAAeR,GAC5B5B,QAASsC,EAAWV,GACpBlB,QAASA,EAAQkB,GACjBY,YAAaA,EAAYZ,GACzBc,gBAAiBA,EAAgBd,OAGR,SAAC1B,GAAD,MAAe,CACxCoD,mBAAoB,SAACtD,GAAD,OAAaE,EP/DD,SAACF,GAAD,MAAc,CAC9CF,KAAMJ,EACNM,WO6D0CsD,CAAmBtD,KAC7DuD,eAAgB,SAACvB,GAAD,OAAU9B,EPtDE,SAAC8B,GAAD,MAAW,CACvClC,KAAMJ,EACNsC,QOoDmCuB,CAAevB,KAClDrC,aAAc,SAACC,EAAMC,GAAP,OAAkBK,EAASP,EAAaC,EAAMC,QAG/CuD,EArEF,SAAC,GAQP,IAPLC,EAOI,EAPJA,YACArD,EAMI,EANJA,QACAsD,EAKI,EALJA,mBACAd,EAII,EAJJA,YACAe,EAGI,EAHJA,eACA5D,EAEI,EAFJA,aACA+C,EACI,EADJA,gBAMA,OAJAc,qBAAU,WACRF,EAAmBD,EAAY,MAC9B,IAGD,yBAAKL,UAAU,QACb,wBAAIA,UAAU,cAAd,QACA,kBAAC,IAAD,CACES,eAAgB,WACdF,GAAe,KAGjB,yBACEP,UACER,EAAc,mCAAqC,gBAErDkB,QAAS,kBAAMH,GAAgBf,KAElB,OAAZxC,EAAmBA,EAAQ2D,KAAO,MAEpCnB,EACC,wBAAIQ,UAAU,uBACXK,EAAYO,KAAI,SAACC,GAAD,OACf,wBACEH,QAAS,kBAAMJ,EAAmBO,IAClCC,IAAKD,EAAK9B,GACViB,UAAU,uBAETa,EAAKF,UAIV,MAEN,yBAAKX,UAAU,cACb,kBAAC,EAAD,CACEpD,KAAK,UACLkD,MAAOJ,EACP/C,aAAcA,EACdoD,YAAY,eCuBPK,G,MAAAA,aAdS,SAACxB,GAAD,MAAY,CAClCmC,aAAc1B,EAAgBT,GAC9B3B,SAAUsC,EAAYX,GACtBlB,QAASA,EAAQkB,GACjBa,WAAYA,EAAWb,GACvBe,iBAAkBA,EAAiBf,OAGV,SAAC1B,GAAD,MAAe,CACxC8D,oBAAqB,SAAC/D,GAAD,OAAcC,ER5DF,SAACD,GAAD,MAAe,CAChDH,KAAMJ,EACNO,YQ0D4C+D,CAAoB/D,KAChEgE,cAAe,SAACjC,GAAD,OAAU9B,ERnDE,SAAC8B,GAAD,MAAW,CACtClC,KAAMJ,EACNsC,QQiDkCiC,CAAcjC,KAChDrC,aAAc,SAACC,EAAMC,GAAP,OAAkBK,EAASP,EAAaC,EAAMC,QAG/CuD,EAvEH,SAAC,GASN,IARLW,EAQI,EARJA,aACArD,EAOI,EAPJA,QACAT,EAMI,EANJA,SACA+D,EAKI,EALJA,oBACAvB,EAII,EAJJA,WACAwB,EAGI,EAHJA,cACAtB,EAEI,EAFJA,iBACAhD,EACI,EADJA,aAMA,OAJA6D,qBAAU,WACRQ,EAAoBD,EAAa,MAChC,CAACrD,IAGF,yBAAKsC,UAAU,OACb,wBAAIA,UAAU,aAAd,OACA,kBAAC,IAAD,CACES,eAAgB,WACdQ,GAAc,KAGhB,yBACEjB,UACEP,EAAa,iCAAmC,eAElDiB,QAAS,kBAAMO,GAAexB,KAEhB,OAAbxC,EAAoBA,EAAS0D,KAAO,MAGtClB,EACC,wBAAIO,UAAU,sBACXe,EAAaH,KAAI,SAACC,GAAD,OAChB,wBACEH,QAAS,kBAAMM,EAAoBH,IACnCC,IAAKD,EAAK9B,GACViB,UAAU,sBAETa,EAAKF,UAIV,MAEN,yBAAKX,UAAU,aACb,kBAAC,EAAD,CACEpD,KAAK,WACLkD,MAAOH,EACPhD,aAAcA,EACdoD,YAAY,gBC3DPmB,G,MAFQ,kBAAM,4BAAQlB,UAAU,mBAAlB,cCmCdI,eARS,SAACxB,GAAD,MAAY,CAClCgB,mBAAoBA,EAAmBhB,OAGd,SAAC1B,GAAD,MAAe,CACxCH,qBAAsB,SAACoE,EAAGC,EAAGC,EAAGC,GAAV,OAAgBpE,EAASH,EAAqBoE,EAAGC,EAAGC,EAAGC,QAGhElB,EA7BM,SAAC,GAAkD,IAAhDR,EAA+C,EAA/CA,mBAAoB7C,EAA2B,EAA3BA,qBAClCH,EAAsDgD,EAAtDhD,KAAMC,EAAgD+C,EAAhD/C,OAAQmB,EAAwC4B,EAAxC5B,iBAAkBC,EAAsB2B,EAAtB3B,kBAMxC,OAJAuC,qBAAU,WACRzD,EAAqBH,EAAMC,EAAQmB,EAAkBC,KACpD,CAACrB,EAAMC,EAAQmB,EAAkBC,IAGpC,yBAAK+B,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,YACb,kBAAC,EAAD,YCfOuB,G,MANC,kBACd,yBAAKvB,UAAU,WACb,yBAAKA,UAAU,qBCqCJI,eAPS,SAACxB,GAAD,MAAY,CAClClB,QAASA,EAAQkB,OAEQ,SAAC1B,GAAD,MAAe,CACxCsE,mBAAoB,SAAC1C,GAAD,OAAU5B,EZ7BE,SAAC4B,GAAD,MAAW,CAC3ChC,KAAMJ,EACNoC,QY2BuC0C,CAAmB1C,QAG7CsB,EAhCG,SAAC,GAAqC,IAAnC1C,EAAkC,EAAlCA,QAAS8D,EAAyB,EAAzBA,mBAO5B,OANAhB,qBAAU,WACRrD,MAAM,oDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACqE,GAAD,OAASD,EAAmBC,QACnC,CAACD,IAEG9D,EACL,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgE,KAAK,YAAYC,OAAK,GAC3B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUE,GAAG,eAGf,kBAAC,EAAD,SCxBSC,EAAM,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUnD,MAAOA,GACf,kBAAC,EAAD,SCJNoD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.137e9eb1.chunk.js","sourcesContent":["export const ACTION_TYPE = {\r\n  LOADING_LIST_METHODS: \"LOADING_LIST_METHODS\",\r\n  GET_CURRENCY_INVOICE: \"GET_CURRENCY_INVOICE\",\r\n  HANDLE_SELL_LIST: \"HANDLE_SELL_LIST\",\r\n  HANDLE_BUY_LIST: \"HANDLE_BUY_LIST\",\r\n  GET_CURRENCY_WITHDRAW: \"GET_CURRENCY_WITHDRAW\",\r\n  CALCULATION_DATA: \"CALCULATION_DATA\",\r\n  HANDLER_INPUT: \"HANDLER_INPUT\",\r\n};\r\n\r\nexport const loadingListMethods = (list) => ({\r\n  type: ACTION_TYPE.LOADING_LIST_METHODS,\r\n  list,\r\n});\r\n\r\nexport const getCurrencyInvoice = (invoice) => ({\r\n  type: ACTION_TYPE.GET_CURRENCY_INVOICE,\r\n  invoice,\r\n});\r\n\r\nexport const getCurrencyWithdraw = (withdraw) => ({\r\n  type: ACTION_TYPE.GET_CURRENCY_WITHDRAW,\r\n  withdraw,\r\n});\r\n\r\nexport const handleSellList = (bool) => ({\r\n  type: ACTION_TYPE.HANDLE_SELL_LIST,\r\n  bool,\r\n});\r\n\r\nexport const handleBuyList = (bool) => ({\r\n  type: ACTION_TYPE.HANDLE_BUY_LIST,\r\n  bool,\r\n});\r\n\r\nexport const handlerInput = (base, amount) => ({\r\n  type: ACTION_TYPE.HANDLER_INPUT,\r\n  base,\r\n  amount,\r\n});\r\n\r\nconst calculationData = data => {\r\n  return ({\r\n  type: ACTION_TYPE.CALCULATION_DATA,\r\n  data\r\n})}\r\n\r\nexport const fetchCalculationData = (base, amount, invoice, withdraw) => dispatch => {\r\n  if(base && amount && invoice && withdraw) {\r\n    fetch(\r\n      `https://involve-it.com/test_front/api/payMethods/calculate?base=${base}&amount=${amount}&invoicePayMethod=${invoice}&withdrawPayMethod=${withdraw}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => dispatch(calculationData(data)));\r\n  }\r\n};\r\n\r\n","import { ACTION_TYPE } from \"./actions\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  listMethods: null,\r\n  currencyInvoice: null,\r\n  currencyWithdraw: null,\r\n  sellList: false,\r\n  buyList: false,\r\n  calculationData: {\r\n    base: '',\r\n    amount: 0,\r\n    invoicePayMethod: 0,\r\n    withdrawPayMethod: 0\r\n  },\r\n  inputInvoice: '',\r\n  inputWithdraw: '',\r\n};\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACTION_TYPE.LOADING_LIST_METHODS: {\r\n      const { list } = action;\r\n      return {\r\n        ...state,\r\n        listMethods: list,\r\n        loading: true\r\n      };\r\n    }\r\n    case ACTION_TYPE.GET_CURRENCY_INVOICE: {\r\n      const { invoice } = action;\r\n      return {\r\n        ...state,\r\n        currencyInvoice: invoice,\r\n        calculationData: {\r\n          ...state.calculationData,\r\n          invoicePayMethod: invoice.id\r\n        },\r\n        sellList: false,\r\n      };\r\n    }\r\n    case ACTION_TYPE.GET_CURRENCY_WITHDRAW: {\r\n      const { withdraw } = action;\r\n      return {\r\n        ...state,\r\n        currencyWithdraw: withdraw,\r\n        calculationData: {\r\n          ...state.calculationData,\r\n          withdrawPayMethod: withdraw.id\r\n        },\r\n        buyList: false,\r\n      };\r\n    }\r\n    case ACTION_TYPE.HANDLE_BUY_LIST: {\r\n      const { bool } = action;\r\n      return {\r\n        ...state,\r\n        buyList: bool\r\n      };\r\n    }\r\n    case ACTION_TYPE.HANDLER_INPUT: {\r\n      const { base, amount } = action;\r\n      if (base === 'invoice') {\r\n        return {\r\n          ...state,\r\n          inputInvoice: amount,\r\n          calculationData: {\r\n            ...state.calculationData,\r\n            base: base,\r\n            amount: amount\r\n          }\r\n        }\r\n      }\r\n      if (base === 'withdraw') {\r\n        return {\r\n          ...state,\r\n          inputWithdraw: amount,\r\n          calculationData: {\r\n            ...state.calculationData,\r\n            base: base,\r\n            amount: amount\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        ...state\r\n      }\r\n    };\r\n    case ACTION_TYPE.HANDLE_SELL_LIST: {\r\n      const { bool } = action;\r\n      return {\r\n        ...state,\r\n        sellList: bool,\r\n      };\r\n    };\r\n    case ACTION_TYPE.CALCULATION_DATA: {\r\n      const { data } = action;\r\n      if (state.calculationData.base === 'withdraw') {\r\n        return {\r\n          ...state,\r\n          inputInvoice: data.amount\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          inputWithdraw: data.amount\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './rootReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst middlewares = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middlewares))\r\n);","import React from 'react';\r\nimport './SuccessfulPage.scss';\r\n\r\nconst SuccessfulPage = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SuccessfulPage;\r\n","import React from 'react';\r\nimport './ConfirmationPage.scss';\r\n\r\nconst ConfirmationPage = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmationPage;\r\n","// import { createSelector } from 'reselect';\r\n\r\nexport const loading = state => state.loading;\r\nexport const getListInvoice = state => state.listMethods.invoice;\r\nexport const getListWithdraw = state => state.listMethods.withdraw;\r\nexport const getInvoice = state => state.currencyInvoice;\r\nexport const getWithdraw = state => state.currencyWithdraw;\r\nexport const getSellList = state => state.sellList;\r\nexport const getBuyList = state => state.buyList;\r\nexport const getInputInvoice = state => state.inputInvoice;\r\nexport const getInputWithdraw = state => state.inputWithdraw;\r\nexport const getCalculationData = state => state.calculationData\r\n\r\n// export const getUsersSelector = createSelector(getUsers, users => {\r\n//   return users;\r\n// });","import React from \"react\";\r\nimport \"./InputCurrency.scss\";\r\n\r\nconst InputCurrency = ({ base, value, handlerInput, placeholder }) => {\r\n  return (\r\n    <input\r\n      className=\"input\"\r\n      type=\"number\"\r\n      value={value}\r\n      onChange={(val) => handlerInput(base, val.target.value)}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputCurrency;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Sell.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getListInvoice,\r\n  loading,\r\n  getInvoice,\r\n  getSellList,\r\n  getInputInvoice\r\n} from \"../../../redux/selectors\";\r\nimport { getCurrencyInvoice, handleSellList, handlerInput } from \"../../../redux/actions\";\r\nimport InputCurrency from \"../InputCurrency/InputCurrency\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\n\r\nconst Sell = ({\r\n  listInvoice,\r\n  invoice,\r\n  getCurrencyInvoice,\r\n  getSellList,\r\n  handleSellList,\r\n  handlerInput,\r\n  getInputInvoice\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrencyInvoice(listInvoice[0]);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sell\">\r\n      <h2 className=\"sell-title\">Sell</h2>\r\n      <OutsideClickHandler\r\n        onOutsideClick={() => {\r\n          handleSellList(false);\r\n        }}\r\n      >\r\n        <div\r\n          className={\r\n            getSellList ? \"sell-currency sell-currency--dec\" : \"sell-currency\"\r\n          }\r\n          onClick={() => handleSellList(!getSellList)}\r\n        >\r\n          {invoice !== null ? invoice.name : null}\r\n        </div>\r\n        {getSellList ? (\r\n          <ul className=\"sell-currency__list\">\r\n            {listInvoice.map((item) => (\r\n              <li\r\n                onClick={() => getCurrencyInvoice(item)}\r\n                key={item.id}\r\n                className=\"sell-currency__item\"\r\n              >\r\n                {item.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : null}\r\n      </OutsideClickHandler>\r\n      <div className=\"sell-input\">\r\n        <InputCurrency\r\n          base=\"invoice\"\r\n          value={getInputInvoice}\r\n          handlerInput={handlerInput}\r\n          placeholder=\"00.00\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  listInvoice: getListInvoice(state),\r\n  invoice: getInvoice(state),\r\n  loading: loading(state),\r\n  getSellList: getSellList(state),\r\n  getInputInvoice: getInputInvoice(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCurrencyInvoice: (invoice) => dispatch(getCurrencyInvoice(invoice)),\r\n  handleSellList: (bool) => dispatch(handleSellList(bool)),\r\n  handlerInput: (base, amount) => dispatch(handlerInput(base, amount))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sell);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Buy.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getListWithdraw,\r\n  loading,\r\n  getWithdraw,\r\n  getBuyList,\r\n  getInputWithdraw,\r\n} from \"../../../redux/selectors\";\r\nimport { getCurrencyWithdraw, handleBuyList, handlerInput } from \"../../../redux/actions\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport InputCurrency from \"../InputCurrency/InputCurrency\";\r\n\r\nconst Buy = ({\r\n  listWithdraw,\r\n  loading,\r\n  withdraw,\r\n  getCurrencyWithdraw,\r\n  getBuyList,\r\n  handleBuyList,\r\n  getInputWithdraw,\r\n  handlerInput\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrencyWithdraw(listWithdraw[0]);\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div className=\"buy\">\r\n      <h2 className=\"buy-title\">Buy</h2>\r\n      <OutsideClickHandler\r\n        onOutsideClick={() => {\r\n          handleBuyList(false);\r\n        }}\r\n      >\r\n        <div\r\n          className={\r\n            getBuyList ? \"buy-currency buy-currency--dec\" : \"buy-currency\"\r\n          }\r\n          onClick={() => handleBuyList(!getBuyList)}\r\n        >\r\n          {withdraw !== null ? withdraw.name : null}\r\n        </div>\r\n\r\n        {getBuyList ? (\r\n          <ul className=\"buy-currency__list\">\r\n            {listWithdraw.map((item) => (\r\n              <li\r\n                onClick={() => getCurrencyWithdraw(item)}\r\n                key={item.id}\r\n                className=\"buy-currency__item\"\r\n              >\r\n                {item.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : null}\r\n      </OutsideClickHandler>\r\n      <div className=\"buy-input\">\r\n        <InputCurrency\r\n          base=\"withdraw\"\r\n          value={getInputWithdraw}\r\n          handlerInput={handlerInput}\r\n          placeholder=\"00.00\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  listWithdraw: getListWithdraw(state),\r\n  withdraw: getWithdraw(state),\r\n  loading: loading(state),\r\n  getBuyList: getBuyList(state),\r\n  getInputWithdraw: getInputWithdraw(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCurrencyWithdraw: (withdraw) => dispatch(getCurrencyWithdraw(withdraw)),\r\n  handleBuyList: (bool) => dispatch(handleBuyList(bool)),\r\n  handlerInput: (base, amount) => dispatch(handlerInput(base, amount))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Buy);\r\n","import React from \"react\";\r\nimport './ButtonExchange.scss';\r\n\r\nconst ButtonExchange = () => <button className=\"button-exchange\">Exchange</button>;\r\n\r\nexport default ButtonExchange;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./ExchangePage.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport Sell from \"./Sell/Sell\";\r\nimport Buy from \"./Buy/Buy\";\r\nimport ButtonExchange from \"./ButtonExchange/ButtonExchange\";\r\nimport { getCalculationData } from \"../../redux/selectors\";\r\nimport { fetchCalculationData } from \"../../redux/actions\";\r\n\r\nconst ExchangePage = ({ getCalculationData, fetchCalculationData }) => {\r\n  const { base, amount, invoicePayMethod, withdrawPayMethod } = getCalculationData;\r\n\r\n  useEffect(() => {\r\n    fetchCalculationData(base, amount, invoicePayMethod, withdrawPayMethod)\r\n  }, [base, amount, invoicePayMethod, withdrawPayMethod])\r\n\r\n  return (\r\n  <div className=\"card\">\r\n    <div className=\"card-exchange\">\r\n      <div className=\"card-position\">\r\n        <Sell />\r\n        <Buy />\r\n      </div>\r\n      <div className=\"card-btn\">\r\n        <ButtonExchange />\r\n      </div>\r\n    </div>\r\n  </div>\r\n)};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  getCalculationData: getCalculationData(state)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCalculationData: (b, a, i, w) => dispatch(fetchCalculationData(b, a, i, w))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExchangePage);\r\n","import React from 'react';\r\nimport './Loading.scss';\r\n\r\nconst Loading = () => (\r\n  <div className=\"loading\">\r\n    <div className=\"lds-dual-ring\"></div>\r\n  </div>\r\n)\r\n\r\nexport default Loading;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport SuccessfulPage from \"./Components/SuccessfulPage/SuccessfulPage\";\r\nimport ConfirmationPage from \"./Components/ConfirmationPage/ConfirmationPage\";\r\nimport ExchangePage from \"./Components/ExchangePage/ExchangePage\";\r\nimport Loading from \"./Components/Loading/Loading\";\r\nimport { loading } from \"./redux/selectors\";\r\nimport { loadingListMethods } from \"./redux/actions\";\r\n\r\nconst RouterNav = ({ loading, loadingListMethods }) => {\r\n  useEffect(() => {\r\n    fetch(\"https://involve-it.com/test_front/api/payMethods\")\r\n      .then((res) => res.json())\r\n      .then((req) => loadingListMethods(req));\r\n  }, [loadingListMethods]);\r\n\r\n  return loading ? (\r\n    <Switch>\r\n      <Route path=\"/Exchange\" exact>\r\n        <ExchangePage />\r\n      </Route>\r\n      <Route path=\"/Confirmation\">\r\n        <ConfirmationPage />\r\n      </Route>\r\n      <Route path=\"/Successful\">\r\n        <SuccessfulPage />\r\n      </Route>\r\n      <Redirect to=\"/Exchange\" />\r\n    </Switch>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: loading(state)\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadingListMethods: (list) => dispatch(loadingListMethods(list))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RouterNav);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { store } from \"./redux/createStore\";\r\nimport RouterNav from \"./RouterNav\";\r\n\r\n\r\nexport const App = () => (\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <RouterNav />\r\n    </Provider>\r\n  </HashRouter>\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.scss\";\r\nimport {App} from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}